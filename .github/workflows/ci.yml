name: CI (.NET)

on:
  push:
    branches: [ main, develop, actions2 ]
  pull_request:
    branches: [ main, develop, actions2 ]

jobs:
  build-test:
    runs-on: ubuntu-latest

    env:
      CONFIGURATION: Release
      PUBLISH_DIR: out
      PROJECT_PATH: estacionamientos/estacionamientos.csproj   # ðŸ‘ˆ ruta fija al .csproj
      IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            9.0.x
            8.0.x

      - name: Cache NuGet
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: ${{ runner.os }}-nuget-

      - name: Restore
        run: dotnet restore $PROJECT_PATH

      - name: Build
        run: dotnet build $PROJECT_PATH -c $CONFIGURATION --no-restore

      - name: Test
        run: dotnet test $PROJECT_PATH -c $CONFIGURATION --no-build --collect:"XPlat Code Coverage"

      - name: Publish
        run: |
          rm -rf "$PUBLISH_DIR"
          dotnet publish $PROJECT_PATH -c $CONFIGURATION -o "$PUBLISH_DIR"
          ls -la "$PUBLISH_DIR"

      - name: Subir artefacto (publish)
        uses: actions/upload-artifact@v4
        with:
          name: published-app
          path: ${{ env.PUBLISH_DIR }}

      # ---------- Docker: Build & Push a Docker Hub ----------
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub again
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}              
          flavor: |
            latest=auto                              
          tags: |
            type=ref,event=branch                    
            type=sha                                

      - name: Build & Push Docker image
        uses: docker/build-push-action@v6
        with:
          context: estacionamientos
          file: estacionamientos/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            CONFIGURATION=${{ env.CONFIGURATION }}

            